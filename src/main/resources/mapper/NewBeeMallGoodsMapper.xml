<?xml version="1.0" encoding="UTF-8"?>
<!--
严肃声明：
开源版本请务必保留此注释头信息，若删除我方将保留所有法律责任追究！
本软件已申请软件著作权，受国家版权局知识产权以及国家计算机软件著作权保护！
可正常分享和学习源码，不得用于违法犯罪活动，违者必究！
Copyright (c) 2019-2021 十三 all rights reserved.
版权所有，侵权必究！
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ltd.newbee.mall.newbeemallapi.dao.NewBeeMallGoodsMapper">
    <resultMap id="BaseResultMap" type="ltd.newbee.mall.newbeemallapi.entity.NewBeeMallGoods">
        <id column="goods_id" jdbcType="BIGINT" property="goodsId"/>
        <result column="goods_name" jdbcType="VARCHAR" property="goodsName"/>
        <result column="goods_intro" jdbcType="VARCHAR" property="goodsIntro"/>
        <result column="goods_category_id" jdbcType="BIGINT" property="goodsCategoryId"/>
        <result column="goods_cover_img" jdbcType="VARCHAR" property="goodsCoverImg"/>
        <result column="goods_carousel" jdbcType="VARCHAR" property="goodsCarousel"/>
        <result column="original_price" jdbcType="INTEGER" property="originalPrice"/>
        <result column="selling_price" jdbcType="INTEGER" property="sellingPrice"/>
        <result column="stock_num" jdbcType="INTEGER" property="stockNum"/>
        <result column="tag" jdbcType="VARCHAR" property="tag"/>
        <result column="goods_sell_status" jdbcType="TINYINT" property="goodsSellStatus"/>
        <result column="create_user" jdbcType="INTEGER" property="createUser"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_user" jdbcType="INTEGER" property="updateUser"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="ltd.newbee.mall.newbeemallapi.entity.NewBeeMallGoods">
        <result column="goods_detail_content" jdbcType="LONGVARCHAR" property="goodsDetailContent"/>
    </resultMap>
    
    <sql id="Base_Column_List">
	    goods_id, goods_name, goods_intro,goods_category_id, goods_cover_img, goods_carousel, original_price,
	    selling_price, stock_num, tag, goods_sell_status, create_user, create_time, update_user, 
	    update_time
  	</sql>
  	<sql id="Blob_Column_List">
	    goods_detail_content
	</sql>
  	
	<select id="selectByPrimaryKeys" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM tb_newbee_mall_goods_info 
		WHERE goods_id IN 
		<foreach item="id" collection="list" open="(" separator="," close=")">
			#{id}
		</foreach>
	</select>
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM tb_newbee_mall_goods_info
		WHERE goods_id = #{goodsId}
	</select>
	
	<select id="findNewBeeMallGoodsBySearch" parameterType="Map" resultMap="BaseResultMap">
		SELECT <include refid="Base_Column_List" />
		FROM tb_newbee_mall_goods_info
		WHERE 
			<if test="keyword != null and keyword !=''">
				(goods_name LIKE CONCAT('%',#{keyword},'%') OR goods_intro LIKE CONCAT('%',#{keyword},'%'))
			</if>
			<if test="goodsCategoryId != null and goodsCategoryId != ''">
				AND goods_category_id = #{goodsCategoryId}
			</if>
			<if test="goodsSellStatus != null">
				AND goods_sell_status = #{goodsSellStatus}
			</if>
        <if test="orderBy!=null and orderBy!=''">
            <choose>
                <when test="orderBy == 'new'">
                    <!-- 按照发布时间倒序排列 -->
                    order by goods_id desc
                </when>
                <when test="orderBy == 'price'">
                    <!-- 按照售价从小到大排列 -->
                    order by selling_price asc
                </when>
                <otherwise>
                    <!-- 默认按照库存数量从大到小排列 -->
                    order by stock_num desc
                </otherwise>
            </choose>
        </if>
        <if test="start!=null and limit!=null">
            limit #{start},#{limit}
        </if>
	</select>
	<select id="findTotalNewBeeMallGoodsBySearch" resultType="int" parameterType="Map">
		SELECT COUNT(*) FROM tb_newbee_mall_goods_info
		WHERE
			<if test="keyword != null and keyword !=''">
				(goods_name LIKE CONCAT('%',#{keyword},'%') OR goods_intro LIKE CONCAT('%',#{keyword},'%'))
			</if>
			<if test="goodsCategoryId != null and goodsCategoryId != ''">
				AND goods_category_id = #{goodsCategoryId}
			</if>
			<if test="goodsSellStatus != null">
				AND goods_sell_status = #{goodsSellStatus}
			</if>
	</select>
	
	<select id="getNewBeeGoodsById" resultMap="ResultMapWithBLOBs">
		SELECT <include refid="Base_Column_List" />, <include refid="Blob_Column_List" />
		FROM tb_newbee_mall_goods_info
		WHERE goods_id = #{goodsId}
	</select>
	
	<update id="updateStockNum" parameterType="ltd.newbee.mall.newbeemallapi.entity.StockNumDTO">
		<foreach collection="stock" item="stockNumDTO">
			UPDATE tb_newbee_mall_goods_info SET stock_num = stock_num - #{stockNumDTO.goodsCount}
			WHERE goods_id = #{stockNumDTO.goodsId} AND goods_sell_status = 0 AND stock_num >= #{stockNumDTO.goodsCount};
		</foreach>
	</update>
	
</mapper>